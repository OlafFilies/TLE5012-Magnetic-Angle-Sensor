<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>Tle5012MagneticAngleSensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/d3a/Read__Angle__Speed__Revolutions_8ino.html</Path>
    <Anchor>a5149c8cb92c4ebcb957a356fcd361f36</Anchor>
    <DeclaredIn>Read_Angle_Speed_Revolutions.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/d3a/Read__Angle__Speed__Revolutions_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>Read_Angle_Speed_Revolutions.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/d3a/Read__Angle__Speed__Revolutions_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Angle_Speed_Revolutions.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/d3a/Read__Angle__Speed__Revolutions_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Angle_Speed_Revolutions.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012Sensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>dd/d1c/Read__Angle__Value__Processing_8ino.html</Path>
    <Anchor>a95e9423a466bdf461f3ac50b3ff3c650</Anchor>
    <DeclaredIn>Read_Angle_Value_Processing.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>dd/d1c/Read__Angle__Value__Processing_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>Read_Angle_Value_Processing.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/d1c/Read__Angle__Value__Processing_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Angle_Value_Processing.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/d1c/Read__Angle__Value__Processing_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Angle_Value_Processing.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012Sensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/dc1/Read__Multiple__Registers_8ino.html</Path>
    <Anchor>a95e9423a466bdf461f3ac50b3ff3c650</Anchor>
    <DeclaredIn>Read_Multiple_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/dc1/Read__Multiple__Registers_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>Read_Multiple_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>command</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/dc1/Read__Multiple__Registers_8ino.html</Path>
    <Anchor>a4635796d5c7e7a2639b11dfe83718acc</Anchor>
    <Abstract>read register beginning with REG_FSYNC</Abstract>
    <DeclaredIn>Read_Multiple_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>leng</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/dc1/Read__Multiple__Registers_8ino.html</Path>
    <Anchor>ad339c9b391ae581c3643e81518d376a6</Anchor>
    <Abstract>and the next four registers REG_MOD_1, REG_SIL, REG_MOD2 and REG_MOD3</Abstract>
    <DeclaredIn>Read_Multiple_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>s</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/dc1/Read__Multiple__Registers_8ino.html</Path>
    <Anchor>a126490d9b39bf48a4e00d244001a2728</Anchor>
    <DeclaredIn>Read_Multiple_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/dc1/Read__Multiple__Registers_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Multiple_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/dc1/Read__Multiple__Registers_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Multiple_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012Sensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a95e9423a466bdf461f3ac50b3ff3c650</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>show_bin</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a4dfbabeee1ca138326af9b859a683f78</Anchor>
    <Abstract>Function prints the binary code of each documented register.</Abstract>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printHeader</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>ae9ee78fc52d9fdf0a7fc36f92054e9b8</Anchor>
    <Abstract>Function prints a common header for each register entries.</Abstract>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printValue</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a106e3d3595be8d6c375a2221563ab5be</Anchor>
    <Abstract>Function prints the separated register entries with there type and remark.</Abstract>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_stat</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>af868befcb82eb223cd011674c428ccdd</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_acstat</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a85041acbff448f07718921bb3eea1059</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_aval</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a9bb0a563bad8e6a7854c862bf3b0c434</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_aspd</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>ab33e0e024a77d8325e7d48dc2bbe109c</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_arev</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a47d8fa21903df1b4434d44cd9e1a09ac</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_fsync</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a17f276e34a7fa3d345468fcae0a9bb4e</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_mod1</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a1aa2599fbb59c9cb27da1bc616a09eaf</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_sil</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>ad5a8afdd2e113dd6b8bc82526fbddfa4</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_mod2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a13f807569c5588c63f8e74f4f9b90f40</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_mod3</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a6e95361a837f8c2c97ba26eca16a87f5</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_offx</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>aedc55bbad614499500db30df0073a1e9</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_offy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a020fe47eddcbc8f8102ab9b3ae01a308</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_synch</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>ab1b84f73603d747150d91abe3187ef3a</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_ifab</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a2e784b93df7bf8cc27df4c3182e84b8d</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_mod4</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>afbc0ee81ee2d68d16f430639efa8f6eb</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_tcoy</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a51396061b73892ba8600677b7948be8c</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_adc</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a22660326b9cc36276fe399c1c3c58c63</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_dmag</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a3ba4cda2c736e8fed7a311ab3c06068b</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_traw</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a86a07a22c3344af94cdf65f6990bbadb</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_iifcnt</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>acfb8460f8381085278d03b66cc4ba892</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg_t250</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d7/d8c/Read__Sensor__Registers_8ino.html</Path>
    <Anchor>a5b4415ceb89bfbe8dfeceef1249581a8</Anchor>
    <DeclaredIn>Read_Sensor_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012Sensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/db3/Read__Sensor__Type_8ino.html</Path>
    <Anchor>a95e9423a466bdf461f3ac50b3ff3c650</Anchor>
    <DeclaredIn>Read_Sensor_Type.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>de/db3/Read__Sensor__Type_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>Read_Sensor_Type.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/db3/Read__Sensor__Type_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Sensor_Type.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/db3/Read__Sensor__Type_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Sensor_Type.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>show_bin</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/db3/Read__Sensor__Type_8ino.html</Path>
    <Anchor>a4dfbabeee1ca138326af9b859a683f78</Anchor>
    <Abstract>Function prints the binary code of each documented register.</Abstract>
    <DeclaredIn>Read_Sensor_Type.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mod2</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/db3/Read__Sensor__Type_8ino.html</Path>
    <Anchor>acda80f53c131295a79b07003176deb88</Anchor>
    <Abstract>Function prints register mod2.</Abstract>
    <DeclaredIn>Read_Sensor_Type.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mod3</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>de/db3/Read__Sensor__Type_8ino.html</Path>
    <Anchor>a0f21c51112c325e0530a9bf6d83e5d53</Anchor>
    <Abstract>Function prints register mod3.</Abstract>
    <DeclaredIn>Read_Sensor_Type.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012MagneticAngleSensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>da/d62/Read__Speed__Processing_8ino.html</Path>
    <Anchor>aede5e6477350e2ff27aba03ec5679814</Anchor>
    <DeclaredIn>Read_Speed_Processing.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>da/d62/Read__Speed__Processing_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>Read_Speed_Processing.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>da/d62/Read__Speed__Processing_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Speed_Processing.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>da/d62/Read__Speed__Processing_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Speed_Processing.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012MagneticAngleSensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d8/d93/Read__Test_8ino.html</Path>
    <Anchor>aede5e6477350e2ff27aba03ec5679814</Anchor>
    <DeclaredIn>Read_Test.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d8/d93/Read__Test_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>Read_Test.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>upd</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d8/d93/Read__Test_8ino.html</Path>
    <Anchor>a006438482a3ef9d56dcdc70a837229a8</Anchor>
    <DeclaredIn>Read_Test.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d8/d93/Read__Test_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Test.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d8/d93/Read__Test_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Test.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SENSOR_NUM</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>a7393179e76364d0c808dae7c57efff9c</Anchor>
    <Abstract>number of connected sensors</Abstract>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CS_PIN_SENSOR_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>a6983b17df0c81dce89657018d45a9f2e</Anchor>
    <Abstract>define more unique chipselect pins for more connected Sensors</Abstract>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CS_PIN_SENSOR_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>a31cc61ca820a301a3b96d43e198e5adf</Anchor>
    <Abstract>This is also a setup for the Sens2Go board but with a second sensor attached.</Abstract>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>a9b3427f3bc28e773f2befd6cd4a99cd6</Anchor>
    <Abstract>Tle5012b Object, set/remove depending on the number of connected sensors.</Abstract>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <Abstract>Sensor IFX SIL(TM) errorCheck.</Abstract>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>d</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>ab3c2710f1db2f26af2d9d0d39402d4a4</Anchor>
    <Abstract>array if the read angle values and revolutions</Abstract>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>r</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>a6b568a22508b01dcfbf3721ee16e71b7</Anchor>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d5/d83/Read__Test__With__SlaveNumber_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Test_With_SlaveNumber.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012MagneticAngleSensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d0/d27/Read__Write__Registers_8ino.html</Path>
    <Anchor>a5149c8cb92c4ebcb957a356fcd361f36</Anchor>
    <DeclaredIn>Read_Write_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d0/d27/Read__Write__Registers_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>Read_Write_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>s</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>d0/d27/Read__Write__Registers_8ino.html</Path>
    <Anchor>a126490d9b39bf48a4e00d244001a2728</Anchor>
    <DeclaredIn>Read_Write_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d0/d27/Read__Write__Registers_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>Read_Write_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>d0/d27/Read__Write__Registers_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>Read_Write_Registers.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012MagneticAngleSensor</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>dd/de8/ReadAngleTest_8ino.html</Path>
    <Anchor>a5149c8cb92c4ebcb957a356fcd361f36</Anchor>
    <DeclaredIn>ReadAngleTest.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkError</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>dd/de8/ReadAngleTest_8ino.html</Path>
    <Anchor>afbc85d70c5a187f8582744df0adf2e33</Anchor>
    <DeclaredIn>ReadAngleTest.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setup</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/de8/ReadAngleTest_8ino.html</Path>
    <Anchor>a4fc01d736fe50cf5b977f755b675f11d</Anchor>
    <DeclaredIn>ReadAngleTest.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loop</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/de8/ReadAngleTest_8ino.html</Path>
    <Anchor>afe461d27b9c48d5921c00d521181f12f</Anchor>
    <DeclaredIn>ReadAngleTest.ino</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirstByte</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/dea/Tle5012b_8cpp.html</Path>
    <Anchor>ad49b292d48f6fdff2fcad35f0a217eef</Anchor>
    <Abstract>Gets the first byte of a 2 byte word.</Abstract>
    <DeclaredIn>Tle5012b.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSecondByte</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/dea/Tle5012b_8cpp.html</Path>
    <Anchor>a73d3da25810058a7adb4f830bafb961e</Anchor>
    <Abstract>Gets the second byte of the 2 byte word.</Abstract>
    <DeclaredIn>Tle5012b.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>crc8</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/dea/Tle5012b_8cpp.html</Path>
    <Anchor>a1d0d34e26b6c32396a3b1dcf5617c7f7</Anchor>
    <Abstract>Function for calculation the CRC.</Abstract>
    <DeclaredIn>Tle5012b.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>crcCalc</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/dea/Tle5012b_8cpp.html</Path>
    <Anchor>af5f2e5cfee7e8bbbd20d6b568c5927b0</Anchor>
    <Abstract>Function for calculation of the CRC.</Abstract>
    <DeclaredIn>Tle5012b.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateAngleSpeed</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>dd/dea/Tle5012b_8cpp.html</Path>
    <Anchor>ad9e595e3c6541fee9f94485245155979</Anchor>
    <Abstract>Calculate the angle speed.</Abstract>
    <DeclaredIn>Tle5012b.cpp</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_SENSOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>aa5e8860cb53f34d0ebcf4b6fb3ecc252</Anchor>
    <Abstract>base command for read</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_SENSOR</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a56b7a7d1acf49e2640b020fa81943629</Anchor>
    <Abstract>base command for write</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_BLOCK_CRC</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a9dc18604653049a9ee5236e62f04d801</Anchor>
    <Abstract>initialize block CRC check command</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_STAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a16cb55f1e05a630c9e356cf90607a78c</Anchor>
    <Abstract>STAT status register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_ACSTAT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>adbb0d5ddead9d531bdafc0e60bf3d09d</Anchor>
    <Abstract>ACSTAT activation status register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_AVAL</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>aaba6228cd0a76d40a7c64c9142b6a345</Anchor>
    <Abstract>AVAL angle value register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_ASPD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>ae8e84b970c729609ab2c1cd416dc6cd2</Anchor>
    <Abstract>ASPD angle speed register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_AREV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a42ea1909b09a4834ce3330adde0d9d51</Anchor>
    <Abstract>AREV angle revolution register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_FSYNC</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a64ae6e3018c24363fdbb9a7b4f0477f9</Anchor>
    <Abstract>FSYNC frame synchronization register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_MOD_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>ab00e421596ee37443c2454c54771877b</Anchor>
    <Abstract>MOD_1 interface mode1 register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_SIL</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>acc15ada644c257afd02f018725061694</Anchor>
    <Abstract>SIL register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_MOD_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>ab9687743b8d8791b69cfb80a4b4c2e66</Anchor>
    <Abstract>MOD_2 interface mode2 register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_MOD_3</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a5b5219a08fd47ea1a0a59bcc2a723844</Anchor>
    <Abstract>MOD_3 interface mode3 register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_OFFX</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>aa4a5a7322d006daa698787bcbb24b062</Anchor>
    <Abstract>OFFX offset x.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_OFFY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a4378ee27b490f3a0a93cbb20b73ae356</Anchor>
    <Abstract>OFFY offset y.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_SYNCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>af13335fa3ab7167936b506153d047473</Anchor>
    <Abstract>SYNCH synchronicity.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_IFAB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a9d95874edd6729ad02e7bb29ea1086fb</Anchor>
    <Abstract>IFAB register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_MOD_4</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a55e5f80d07ce358e5f44c7c0b8efb6b6</Anchor>
    <Abstract>MOD_4 interface mode4 register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_TCO_Y</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>af3d4fc78cd7e1bd876c7afc82bcc7c9f</Anchor>
    <Abstract>TCO_Y temperature coefficient register.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_ADC_X</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a05f2f0d6267ac3a681e70493b4846996</Anchor>
    <Abstract>ADC_X ADC X-raw value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_ADC_Y</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a82d0d3cd51281e0beaa96ba8875e47d7</Anchor>
    <Abstract>ADC_Y ADC Y-raw value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_D_MAG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>ae5013d218a9c6d3c943ab4e3e25ad1bd</Anchor>
    <Abstract>D_MAG angle vector magnitude.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_T_RAW</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>afb2c16a619bfd60009d1cd7bcabff198</Anchor>
    <Abstract>T_RAW temperature sensor raw-value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_IIF_CNT</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a8322600bf5a99501002aaf4bbf20b85a</Anchor>
    <Abstract>IIF_CNT IIF counter value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REG_T25O</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>aef87c1260d01280cbbde41c72a86ba90</Anchor>
    <Abstract>T25O temperature 25°c offset value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_ERROR_MASK</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a96e65fac6400865ca161d72ae9b97f57</Anchor>
    <Abstract>System error masks for safety words.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTERFACE_ERROR_MASK</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>aa9d632bc602ff59eb99a5e6984552aad</Anchor>
    <Abstract>Interface error masks for safety words.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INV_ANGLE_ERROR_MASK</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a38aa576713cddc10fd76bf69aa456d95</Anchor>
    <Abstract>Angle error masks for safety words.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_POLYNOMIAL</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a4193f399cfecf510bd0f451145d5c73e</Anchor>
    <Abstract>values used for calculating the CRC</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_SEED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>aa18fe7645d69f68abece94ea1138cf66</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_NUM_REGISTERS</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a77571cffe44a22332f7d3370868ae014</Anchor>
    <Abstract>number of CRC relevant registers</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_REGISTER_MEM</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a47890b12a0cd9ae3d547769ab3ca1f2e</Anchor>
    <Abstract>max readable register values buffer</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DELETE_BIT_15</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a83726ef7f0fa1ad48fa2594752f8d85c</Anchor>
    <Abstract>Value used to delete everything except the first 15 bits.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANGE_UINT_TO_INT_15</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a7d2fbaa03bfea1a20531f0926b8bd474</Anchor>
    <Abstract>Value used to change unsigned 16bit integer into signed.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHECK_BIT_14</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a0bfebbfdc802214542b08a6ac737ac93</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GET_BIT_14_4</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>ac3a56a0d0b6fad473a9ae5298899a95e</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DELETE_7BITS</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a2ff345772205e5fdd1c54065c6976c66</Anchor>
    <Abstract>values used to calculate 9 bit signed integer sent by the sensor</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANGE_UNIT_TO_INT_9</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>ab8719e1bb788ed4745d352b793a1d525</Anchor>
    <Abstract>Value used to change unsigned 9bit integer into signed.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHECK_BIT_9</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a0f97fb2cd0486a18787b1ecb05a41a78</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>POW_2_15</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>abc655125ebb800379cac29c28e9bcef9</Anchor>
    <Abstract>values used to for final calculations of angle speed, revolutions, range and value</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>POW_2_7</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>af07a478d052c831c4e125c6fe58236b1</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANGLE_360_VAL</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a301b1017fc6c905a7d3331cb29bd05bd</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TEMP_OFFSET</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a3cb24f09004f92185b77e9e7bac6ea61</Anchor>
    <Abstract>values used to calculate the temperature</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TEMP_DIV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a8fac6162dc1a8a867d100bfacb3d048c</Anchor>
    <Abstract>Prints a binary number with leading zeros (Automatic Handling)</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PRINTBIN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a7fb0941245c1503530bfff761bc837a5</Anchor>
    <Abstract>Prints a binary number with leading zeros (Automatic Handling) with space.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PRINTBINS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>aacbc769a4deea3c758b941dc0b0e91d6</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NO_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaabf350750d0d4fabd8954c0f1e9bbae94</Anchor>
    <Abstract>NO_ERROR = Safety word was OK.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaaa67b06cae69cb8e07cb1a47e1508ab12</Anchor>
    <Abstract>SYSTEM_ERROR = over/under voltage, VDD negative, GND off, ROM defect.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTERFACE_ACCESS_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa93ee389fdb7b5f07e6213fb7ca6ba712</Anchor>
    <Abstract>INTERFACE_ACCESS_ERROR = wrong address or wrong lock.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INVALID_ANGLE_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaaa9b34d67db20bdb032a6c7bd30dd1069</Anchor>
    <Abstract>INVALID_ANGLE_ERROR = NO_GMR_A = 1 or NO_GMR_XY = 1.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANGLE_SPEED_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa2799bc643160a562289aff49a05539e7</Anchor>
    <Abstract>ANGLE_SPEED_ERROR = combined error, angular speed calculation wrong.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa8a393db133e073ad8bac2f92e78d6f5d</Anchor>
    <Abstract>CRC_ERROR = Cyclic Redundancy Check (CRC), which includes the STAT and RESP bits wrong.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NO_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaabf350750d0d4fabd8954c0f1e9bbae94</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaaa67b06cae69cb8e07cb1a47e1508ab12</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTERFACE_ACCESS_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa93ee389fdb7b5f07e6213fb7ca6ba712</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INVALID_ANGLE_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaaa9b34d67db20bdb032a6c7bd30dd1069</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa8a393db133e073ad8bac2f92e78d6f5d</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFE_low</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a8f5860123fb5c44e91e2c68711ccc0caaa79fe2d7b83d1612a7d29a616fe34a64</Anchor>
    <Abstract>switch of safety word generation</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SAFE_high</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a8f5860123fb5c44e91e2c68711ccc0caac8b668e43d071eab3b4b7cc7c6d824a8</Anchor>
    <Abstract>switch on safety word generation</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UPD_low</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a744f8b0af923da631ca683ff0c1c42e2a3bc6dd62bbe31347ac0b41d318447741</Anchor>
    <Abstract>read normal registers</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>UPD_high</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a744f8b0af923da631ca683ff0c1c42e2a01e8f5f629ceb1d49eea3d8aa682eb84</Anchor>
    <Abstract>read update buffer registers</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_ERROR_MASK</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a96e65fac6400865ca161d72ae9b97f57</Anchor>
    <Abstract>This class controls the Tle5012b Angle sensor.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTERFACE_ERROR_MASK</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>aa9d632bc602ff59eb99a5e6984552aad</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INV_ANGLE_ERROR_MASK</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a38aa576713cddc10fd76bf69aa456d95</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_STA_CMD_NOSAFETY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a71a44e20a71fe9e7608f03a8fd9a69f3</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_STA_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ac816047fc6e507d41cc905293d3fae6e</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_ACTIV_STA_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a6d045548a4e4dc88bf5153394ccbdca6</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_ANGLE_VAL_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>abb60d847f179b36dba6c5e2936bdd0f3</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_ANGLE_SPD_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a7f90fc75db1c6746609f65a3fa21e0bc</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_ANGLE_REV_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a29f249e9fe55cf34c1b7edef772bb014</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_TEMP_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00f1f778494a2a3c6bd7d2df3dcf9040</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_INTMODE_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a589e6e193b53727bfc6032fefcaa7412</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_SIL</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a2ccd2af1ea4d46f6b3f50a4e6ec92927</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_INTMODE_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a02db399a80c6a29522de5d005ea990e0</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_INTMODE_3</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ad83d05b42ec01dbe4d1a9f3e7162c99f</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_OFFSET_X</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a646732cd12b29cad28e9009944df3e5a</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_OFFSET_Y</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ae1aa7b0e12ce090163f5f3ea1ec5a0ae</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_SYNCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ae0b8bc7f120988d0f14d88760577cfd2</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_IFAB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a32b895e232ef5af692a92807ecfda6d1</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_INTMODE_4</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a88743ab3e97ac8ab1d5ccaed3b9f7767</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_TEMP_COEFF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>abc62fd99d248e3144d2c91a77c48fa3f</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_RAW_X_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a53d03221c4ce6c741603880171ad116a</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_RAW_Y_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ae6550e188986d8e28a26ecbb7915222b</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_UPD_STA_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>aef89b37c271e177df9c6bcc5c4faf82b</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_UPD_ANGLE_VAL_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>af327eed9ee4968cca98d811894801f5b</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_UPD_ANGLE_SPD_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ab3bb19ecd2223da429beb162e2e4d6c3</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_UPD_ANGLE_REV_CMD</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a3bb4efebd2998bae552375ec8066cbf3</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>READ_BLOCK_CRC</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a9dc18604653049a9ee5236e62f04d801</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_ACTIV_STA</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a0ff2787075cf1fa5492731a53bf67e7b</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_INTMODE_1</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ab9a944d75a8d8c2eb58c1831ef22d29b</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_SIL</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a7ec8342a36119301bfc4e10b9b25f959</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_INTMODE_2</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a859c84a1d59dee500dc5b8fa1fbf2daf</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_INTMODE_3</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a3b2fc3678310cb0e2be3018dde4f8b25</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_OFFSET_X</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>aa9ebfd0005f294f214fa998e0d7b58b7</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_OFFSET_Y</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>aab93a43d6d30583bcdad0d5b645d49ac</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_SYNCH</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a9f604429c0b6bc8d0c692bd5b89f6f0a</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_IFAB</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a005ecabcd49ddd3eb712a982f9d8dcf3</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_INTMODE_4</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ab38b9ea81afeceb58a80f962ec030447</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>WRITE_TEMP_COEFF</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ac629a88d0b4b829ce663e8a5d2a1c1a5</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHECK_CMD_UPDATE</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>abbb6bcb43001038d103c457ee2683af3</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_POLYNOMIAL</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a4193f399cfecf510bd0f451145d5c73e</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_SEED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>aa18fe7645d69f68abece94ea1138cf66</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_NUM_REGISTERS</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a77571cffe44a22332f7d3370868ae014</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DELETE_BIT_15</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a83726ef7f0fa1ad48fa2594752f8d85c</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANGE_UINT_TO_INT_15</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a7d2fbaa03bfea1a20531f0926b8bd474</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHECK_BIT_14</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a0bfebbfdc802214542b08a6ac737ac93</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DELETE_7BITS</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a2ff345772205e5fdd1c54065c6976c66</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHANGE_UNIT_TO_INT_9</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ab8719e1bb788ed4745d352b793a1d525</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CHECK_BIT_9</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a0f97fb2cd0486a18787b1ecb05a41a78</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>POW_2_15</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>abc655125ebb800379cac29c28e9bcef9</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>POW_2_7</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>af07a478d052c831c4e125c6fe58236b1</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANGLE_360_VAL</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a301b1017fc6c905a7d3331cb29bd05bd</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TEMP_OFFSET</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a3cb24f09004f92185b77e9e7bac6ea61</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TEMP_DIV</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a8fac6162dc1a8a867d100bfacb3d048c</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GET_BIT_14_4</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>ac3a56a0d0b6fad473a9ae5298899a95e</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPEED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>aac3553b3932cbfeeac4526ce7ca0336b</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DELAYuS</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a2c288807d2322e428a749cd56d87b74e</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DUMMY</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a35beee7b0f2f3e294c4a4a69a5f02df4</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NO_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaabf350750d0d4fabd8954c0f1e9bbae94</Anchor>
    <Abstract>NO_ERROR = Safety word was OK.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaaa67b06cae69cb8e07cb1a47e1508ab12</Anchor>
    <Abstract>SYSTEM_ERROR = over/under voltage, VDD negative, GND off, ROM defect.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTERFACE_ACCESS_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa93ee389fdb7b5f07e6213fb7ca6ba712</Anchor>
    <Abstract>INTERFACE_ACCESS_ERROR = wrong address or wrong lock.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INVALID_ANGLE_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaaa9b34d67db20bdb032a6c7bd30dd1069</Anchor>
    <Abstract>INVALID_ANGLE_ERROR = NO_GMR_A = 1 or NO_GMR_XY = 1.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANGLE_SPEED_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa2799bc643160a562289aff49a05539e7</Anchor>
    <Abstract>ANGLE_SPEED_ERROR = combined error, angular speed calculation wrong.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d9b/Tle5012b_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa8a393db133e073ad8bac2f92e78d6f5d</Anchor>
    <Abstract>CRC_ERROR = Cyclic Redundancy Check (CRC), which includes the STAT and RESP bits wrong.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NO_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaabf350750d0d4fabd8954c0f1e9bbae94</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYSTEM_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaaa67b06cae69cb8e07cb1a47e1508ab12</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INTERFACE_ACCESS_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa93ee389fdb7b5f07e6213fb7ca6ba712</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>INVALID_ANGLE_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaaa9b34d67db20bdb032a6c7bd30dd1069</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC_ERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>econst</Type>
    </TokenIdentifier>
    <Path>d2/d5d/Tle5012b__4wire_8h.html</Path>
    <Anchor>a00cb94e6b0fec4858e3ddcc7248410aaa8a393db133e073ad8bac2f92e78d6f5d</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_NUM_REG</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d1/dfc/Tle5012b__reg_8h.html</Path>
    <Anchor>a9f3bf83b4cc431c66ee2dc4b2911c2a9</Anchor>
    <Abstract>defines the value for temporary data to read all readable registers</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPEED</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d6/d81/Tle5012b__SPI_8h.html</Path>
    <Anchor>aac3553b3932cbfeeac4526ce7ca0336b</Anchor>
    <Abstract>default speed of SPI transfer</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PIN_SPI_EN</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d6/d81/Tle5012b__SPI_8h.html</Path>
    <Anchor>a21a4154906f6c8758467aa5f3a407007</Anchor>
    <Abstract>Sensor Enable pin for XMC Sensor2Go only.</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAX_SLAVE_NUM</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>d6/d81/Tle5012b__SPI_8h.html</Path>
    <Anchor>aa2359388dcf805200957f4751003ebde</Anchor>
    <Abstract>Maximum numbers of slaves on one SPI bus.</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_Examples</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>d3/dcb/md_Examples.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_Installation</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>d4/d6d/md_Installation.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>md_C:_Users_Enriquez_Documents_Arduino_libraries_tle5012b_LICENSE</Name>
      <APILanguage>markdown</APILanguage>
    </TokenIdentifier>
    <Path>da/da7/md_C_1_Users_Enriquez_Documents_Arduino_libraries_tle5012b_LICENSE.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPIClass</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>SPIClass</Scope>
    </TokenIdentifier>
    <Path>d7/df3/classSPIClass.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safetyWord_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af7d01c26105b7253b570aaaccb1c902a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readActiveStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac4f137488cec51ae6ebd8b56142def33</Anchor>
    <Abstract>The next functions are used primarily for storing the parameters and control of how the sensor works.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_spiConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ab99ec26720c5b5865723a14b9c89b422</Anchor>
    <Abstract>SPI library for 3/4wire setup.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac6e2445f0598385ab5df8ce55bca5a6f</Anchor>
    <Abstract>Pin to switch on/off the sensor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMOSI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a37936b026924c6b9b972531ea0f76d54</Anchor>
    <Abstract>Pin for SPI MOSI (pin 0.6 on test board);.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMISO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>accf2481ed9b23ac27f5fa1431fc4e681</Anchor>
    <Abstract>Pin for SPI MISO (pin 0.7 on test board)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSCK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a2b856c2b509475fb60fe41e6d8391415</Anchor>
    <Abstract>Pin for CLOCK (pin 0.8 on test board)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a33c580726077dc3cf0d09b678c97f92c</Anchor>
    <Abstract>Pin for chip select (pin 0.9 on test board)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSlave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a8efc5fae4b72b8f1da30d62933ba54f7</Anchor>
    <Abstract>actual set slave number</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safetyStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a4a630fc4542a94f9a0a6acf2ef04e470</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safetyWord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a8623c50134a21355283d68669c6292fa</Anchor>
    <Abstract>the last fetched safety word</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_command</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a464beca6ae6acfe42b4f3afc5276df39</Anchor>
    <Abstract>command write data [0] = command [1] = data to write</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_received</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a26a3c8ac698a471b10d2f93164740fe0</Anchor>
    <Abstract>fetched data from sensor with last word = safety word</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_registers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a7c81d030ca873e38a67c4aeab5bf5140</Anchor>
    <Abstract>keeps track of the values stored in the 8 _registers, for which the CRC is calculated</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ab67b3e69d8acc26005635f1cdf986c01</Anchor>
    <Abstract>constructor for the Sensor</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Tle5012b</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a9624bbe8790e7e5bbcfee9dbadcfc226</Anchor>
    <Abstract>destructor stops the Sensor</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a77e853610d04e46b9c3db7aedeefd583</Anchor>
    <Abstract>All these functions cover the SPI interface and should be implemented into XMC SPI wrapper.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a6e83584c74a72d1243b2325f056716c3</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a74e901656480957edbfdce79d99ab590</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ace80914649733a3045110acaa5b2566e</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac2c7251bb9b2570fd3f065087ad1c9aa</Anchor>
    <Abstract>Switches the sensor off and ends the comunication.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a8b20197095fe51d38749573e930701c0</Anchor>
    <Abstract>Triggers an update in the register buffer.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a1b640b2d39e54af974b2699e9cbaf7ab</Anchor>
    <Abstract>Function enables Sensor by switch on EN pin which is only possible on Sensor2go shields,...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a36f65d31d68be3190354b6aa32238b8e</Anchor>
    <Abstract>Functions disables Sensor by switch off EN pin (only possible on Sensor2go shield)</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBlockCRC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a32fa9cede7dabe812630f28fd67f45a9</Anchor>
    <Abstract>Reads the block of _registers from addresses 08 - 0F in order to figure out the CRC.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a9140a4c8dcf66a3417edc8a2e0a6520a</Anchor>
    <Abstract>General read function for reading _registers from the Tle5012b.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMoreRegisters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af3e2a7844327621adf0759a071eca4b7</Anchor>
    <Abstract>Can be used to read 1 or more consecutive _registers, and the values used to read 1 or more than 1 co...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af3d41ee5db94f9867807e03e11c32add</Anchor>
    <Abstract>This functions reads the main status word for the sensor, mainly for checking with the additional saf...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readActivationStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac6d071f7e86dd97d3f38399084a11b25</Anchor>
    <Abstract>This functions reads activation status word for the sensor, which held on/off information for all opt...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac4bb2f1dcaf241c31ab7b9ae99428d36</Anchor>
    <Abstract>read register offset 0x06</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a9072a0c9381eecc0b1a125be8e2d38ef</Anchor>
    <Abstract>read register offset 0x07</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a378219cd79b8ad2a7403028ce12ec16d</Anchor>
    <Abstract>read register offset 0x08</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a390dd86d484f4592b1041ce0aac93c60</Anchor>
    <Abstract>read register offset 0x09</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readOffsetX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a1e96e8730f7d991408fff4b04c87d855</Anchor>
    <Abstract>read register offset 0x0A</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readOffsetY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a1a43aac5d2822e07b4c71724374b2eb2</Anchor>
    <Abstract>read register offset 0x0B</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac870f707edce38e0bd1340edc920b3a7</Anchor>
    <Abstract>read register offset 0x0C</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIFAB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a7762e0656aa14a5946ff483da629fb6b</Anchor>
    <Abstract>read register offset 0x0D</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a574e5494be6d2cc283dfb809dfb46daa</Anchor>
    <Abstract>read register offset 0x0E</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a046788e8d5857a5a8d5753adcd4a3e29</Anchor>
    <Abstract>read register offset 0x0F</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempDMag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a2ae450ae4fa350c848755cb168434f09</Anchor>
    <Abstract>read register offset 0x14</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempRaw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>affe9143fe96d1a6f98655076be36b6c2</Anchor>
    <Abstract>read register offset 0x15</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempIIFCnt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a9a52618065603e37804e1b0de141fdec</Anchor>
    <Abstract>read register offset 0x20</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempT25</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a04fdd68d0d026e0985e9a80f55aa7d4c</Anchor>
    <Abstract>read register offset 0x30</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRawX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>afa199fd73a1fcd1d521e84dfc76067b2</Anchor>
    <Abstract>The rawX value is signed 16 bit value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRawY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ad1a15395c2a870a9aed4a15350d00f4d</Anchor>
    <Abstract>The rawY value is signed 16 bit value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af264b8bee7cedf6f8703c6f45bb92e0e</Anchor>
    <Abstract>returns the Angle Range Angle Range is stored in bytes 14 - 4 of MOD_2.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a69b7f1776bb9a5ccdc6e37f36e30070e</Anchor>
    <Abstract>Returns the angleValue calculated on the base of a 15 bit signed integer.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a5591ed9a89a69c2ae84e169afd910888</Anchor>
    <Abstract>Same function as before but also returns a pointer to the raw data.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumRevolutions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>aa6c23f2ed450d6bf769fb9f824ca18b8</Anchor>
    <Abstract>Returns the number of revolutions done from the angle value which is a 9 bit signed integer.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTemperature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a8af825f5a06821b5681b1d3decc2dc39</Anchor>
    <Abstract>Return the temperature.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTemperature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af43ead769c892c165c10e999ab4558dc</Anchor>
    <Abstract>Same as above but also returns a pointer to the raw data.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a14f4b39cdb03955a1d7f4b0648232e87</Anchor>
    <Abstract>Returns the calculated angle speed.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a3fe01489173bad4921165c872b41808d</Anchor>
    <Abstract>Same as above but also returns a pointer to the raw data.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSlaveNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a40e7bbc659f88cd747dcde66ca22e207</Anchor>
    <Abstract>Function sets the SNR register with the correct slave number.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a0601c6d4d0449d1dec934420b74c5a23</Anchor>
    <Abstract>General write function for writing registers to the Tle5012b.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTempCoeffUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ab2145a6cfee2789b6178a4397e708abf</Anchor>
    <Abstract>This function is used in order to update the CRC in the register 0F(second byte)</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeActivationStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a0bccafbd2b4459d84eda14d9761f0803</Anchor>
    <Abstract>Standard function used for updating the CRC.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>adae82ceca5bf85722579ed7ba6560b98</Anchor>
    <Abstract>write register offset 0x06</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a3bd4b8868a04073ad03d3de56616ce08</Anchor>
    <Abstract>write register offset 0x07</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ab80206716ba9efaf55c55bc8ba517087</Anchor>
    <Abstract>write register offset 0x08</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a630f5d767edb27a10c9c253f1ea3c8fc</Anchor>
    <Abstract>write register offset 0x09</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOffsetX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a399b13d2b82e6b169b21cf0b6f76476b</Anchor>
    <Abstract>write register offset 0x0A</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOffsetY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a604fc1dd18d344cb087510b74aca0bc8</Anchor>
    <Abstract>write register offset 0x0B</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a59095bb94844d7bcd1be84acb77ccfb9</Anchor>
    <Abstract>write register offset 0x0C</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIFAB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>acb9d82511b602a82bcacf81f0dd098f8</Anchor>
    <Abstract>write register offset 0x0D</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a39117f21c22ef1fcb4b4a01f26e4a5a2</Anchor>
    <Abstract>write register offset 0x0E</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTempCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a4e6326499c30bf5bfcd6db95ee58bf48</Anchor>
    <Abstract>write register offset 0x0F</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>regularCrcUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ae66fc608d2f5ac4ab9c666c5c96590db</Anchor>
    <Abstract>This function is called each time any register in the range 08 - 0F(first byte) is changed.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkSafety</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a693aa704e4e6631219edd80fbee80347</Anchor>
    <Abstract>checks the safety by looking at the safety word and calculating the CRC such that the data received i...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetSafety</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a2430563f51c44e3dcd7438330fa59fd5</Anchor>
    <Abstract>When an error occurs in the safety word, the error bit remains 0(error), until the status register is...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_S0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a15734adf173a0e968109d0fc65ac5164aa6802515e62b549f71d68dcf5a38beae</Anchor>
    <Abstract>TLE5012B_S0 default setting for only one sensor on the SPI.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_S1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a15734adf173a0e968109d0fc65ac5164a49ab2cac701cc2c471c3b774ea702e9e</Anchor>
    <Abstract>TLE5012B_S1 second sensor needs also a second CSQ.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_S2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a15734adf173a0e968109d0fc65ac5164aa149d5d6419fc5242eb318962280b441</Anchor>
    <Abstract>TLE5012B_S2 third sensor and dito.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_S3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a15734adf173a0e968109d0fc65ac5164a416df351b02b38dc95a840477fe0d409</Anchor>
    <Abstract>TLE5012B_S3 fourth sensor and dito.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b::safetyWord</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>responseSlave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <Anchor>ab76daa8c3226db6e6e0f9374d8cfc800</Anchor>
    <Abstract>Returns the safety word slave number to identify the sensor.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Safety</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <Anchor>ae2350754d5ba951fcfb4ec786f3f0e87</Anchor>
    <Abstract>Function separates safety word bits.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STAT_RES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <Anchor>a5fccea8ceb97c178e5d17827e5e6b8a8</Anchor>
    <Abstract>&lt; Safety word bit setting</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STAT_ERR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <Anchor>ab03cc94d0f20d96d670f06df25a06d8d</Anchor>
    <Abstract>bits 14:14 System error</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STAT_ACC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <Anchor>a8c0cf713372c9de46869327c69d0f491</Anchor>
    <Abstract>bits 13:13 Interface access error</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>STAT_ANG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <Anchor>a9e78db47b257129db7121c68514a6e4b</Anchor>
    <Abstract>bits 12:12 Invalid angle value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RESP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <Anchor>af750d21b3b602c6ea48967564af3017d</Anchor>
    <Abstract>bits 11:8 Sensor number response indicator</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b::safetyWord</Scope>
    </TokenIdentifier>
    <Path>d7/d06/structTle5012b_1_1safetyWord.html</Path>
    <Anchor>adccb2d50a5bbc412807910cc97ec823b</Anchor>
    <Abstract>bits 7:0 Status ADC Test</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_4wire</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_4wire</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a0cd418cf9c75583f3b5513819f11a8e8</Anchor>
    <Abstract>Tle5012b_4wire.cpp - Library for Arduino for the Tle5012b_4wire angle sensor.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_4wire</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>aeb4c50c65943f7c2f5e29836e5a0b82e</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Tle5012b_4wire</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a2fb7e1e9e07d237b47166ecddf4632dc</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a054afc7c186e492e2ae266b698d376e3</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a2d6e1d2706d6141748c010c65ad46579</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a4e9c02e5ca3853cda4b8d8535c70789d</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a58b863f47fcf713667d4b742401e60a5</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a1440c5458ecf262a9ba3c39a24a091a4</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a30895c451cdff4550dcef4b2c43f7a46</Anchor>
    <Abstract>General read function for reading _registers from the Tle5012b_4wire.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBlockCRC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a63f75c1449cf561e73f791dcf8a90d17</Anchor>
    <Abstract>Reads the block of _registers from addresses 08 - 0F in order to figure out the CRC.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMoreRegisters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a5fa233053be11ed96a379067b928db41</Anchor>
    <Abstract>used to read 1 or more than 1 consecutive _registers</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a405d28d3046a9dc10934d030533d5f57</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readAngleValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a14b3204b5597d9a8434e678f9b8bac23</Anchor>
    <Abstract>The angle value is a 15 bit signed integer.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a93fffc70488637a8736cbd0f86866c3f</Anchor>
    <Abstract>The angle speed is a 15 bit signed integer.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readAngleRevolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a69632c1519d103b5676043345442d56b</Anchor>
    <Abstract>The angle value is a 9 bit signed integer.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readUpdStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a4df0a3c347796b2cf8a55883e1245d7c</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readUpdAngleValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a033ed32c73e8da962d80b37272c17d86</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readUpdAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>acbdac30be5ec6661a7e5f8e5c39f19f1</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readUpdAngleRevolution</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a719e58c71b84c2c2af9aba68c8fd5b79</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTemp</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a9a8abf9ebdae7091e5c571c3c2f23369</Anchor>
    <Abstract>The angle value is a 9 bit signed integer.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRawX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ab7d3bda3c4ca0d3f57e36a3c65916941</Anchor>
    <Abstract>The rawX value is signed 16 bit value.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRawY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>aa483ef537e6f6400fc418e521cc36c11</Anchor>
    <Abstract>The rawY is a signed 16 bit value.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readActivationStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a3c8d4d192bcd83fa44ce07a70aea0265</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readOffsetX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>af2315eecd5f3d495f02470e0b77d88b6</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readOffsetY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ae7a2943a72607e1587ee136e31ef4c18</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a66b4e405b28bf21e5b742c961562d2f1</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ab83b77aad2eb8e5ad0fa2fb2b508849a</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ae969f7dfe43b55d5c30d90d12caba710</Anchor>
    <Abstract>The next eight functions are used primarily for storing the parameters and control of how the sensor ...</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a152179ae125e08ea8a22614d3bd8ca56</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a3ab7724b592b9cd205e3f13db66fb170</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIFAB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>acaad9a84ab6e29831920e0e2211cdbe0</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a75688a5bdd87228d70dcbe0470f85553</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a944512fba99cedce292457e658e300d9</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>aff54cd430b3d3518e35ffd47f770c02d</Anchor>
    <Abstract>General write function for writing _registers from the Tle5012b_4wire.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeActivationStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a0ffee41bda8e6a4238df07af3ec56ad2</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a387ce08b681d273eb73318e179a3ed19</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a340d9958d6f6237e463d2de8f1701b7b</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ac54f51304d2f53fd661064e25b11d4f9</Anchor>
    <Abstract>If the next eight function are called anytime and the values stored in the corresponding _registers i...</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a4388dc61ad657fa14877d7eba9227ee0</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOffsetX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ae1af7df23036772968b056b9d315e472</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOffsetY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ac46d191bf527c55ce64558f4d8d4eac0</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a44f7caed88596233641512d8d8c53377</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIFAB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>abc9e9b56ba273da3906d38c06b1f7801</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>af76d8417b511bcda247998e706beef22</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTempCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ac1c549d8767450f0b0409d8ceacb49cb</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTempCoeffUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>af4bdb489e3976390e6ae42aefa0ba212</Anchor>
    <Abstract>This function is used in order to update the CRC in the register 0F(second byte)</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a36965ca79c99de9c41fada833907e4f2</Anchor>
    <Abstract>returns the angle speed</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ab5410e6bc67ccd331e59131d1eecb926</Anchor>
    <Abstract>returns the angle value</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumRevolutions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ac960ecd9b9d11ab744c8feb455752453</Anchor>
    <Abstract>returns the number of revolutions</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUpdAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>aae0f750f1301c241cc19c2e0cecab06a</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUpdAngleValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a3a4b1bd2552b43ff3f7649a9f6b527ac</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getUpdNumRevolutions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a5545040adde014e6f491b13e1eefb36d</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTemperature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a15dea491e65166e5b93b5dc587549d93</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a17cb946e08117333a23ddd40a2a646bc</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a27ddb242bf636786cb0a9c6613246e49</Anchor>
    <Abstract>Triggers an update.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>regularCrcUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>afc32eed0afa59ef54cbcb36d92ea0093</Anchor>
    <Abstract>This function is called each time any register in the range 08 - 0F(first byte) is changed.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkSafety</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ad3998d6935fcc9d31cfb5ed33d21f3e7</Anchor>
    <Abstract>After every transaction with the Tle5012b_4wire, a safety word is returned to check the validity of t...</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetSafety</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ac5990f50c7b311894822a14cb46b8caa</Anchor>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getFirstByte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a014338d6ae85d02404a9b3d4e4cf4eb6</Anchor>
    <Abstract>Gets the first byte of a 2 byte word.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_getSecondByte</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a0c85f9a52754309e59aebb3f85b1818f</Anchor>
    <Abstract>Gets the second byte of the 2 byte word.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_crc8</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>addbed3a27d83aed16f6f003b35925678</Anchor>
    <Abstract>Function for calculation the CRC.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_crcCalc</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>ae097da02afc8bc025b018f75bce1eeb6</Anchor>
    <Abstract>Function for calculation of the CRC.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_calculateAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a2324dc49dd7e7747d0b931f050a988a7</Anchor>
    <Abstract>The formula to calculate the Angle Speed as per the data sheet.</Abstract>
    <DeclaredIn>Tle5012b_4wire.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_spiConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a5fef1f23d0bee01530caf73319ef0e99</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_spiSetting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a897276675472b486d37b10bd39bf292d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_chipselect</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a9bfa6299047054e0f8c1625d303bf5f9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_masterout</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a29dad338452d097eeece90cabaec41c6</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_masterin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a23c044fb1fc7ca0a19ad1eeef42763e3</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_clock</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a94ebc8a597b240c861c393b491403b7d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_registers</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_4wire</Scope>
    </TokenIdentifier>
    <Path>df/dbd/classTle5012b__4wire.html</Path>
    <Anchor>a7053761d314504cb05f08cf8fbb3e390</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safetyWord_t</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af7d01c26105b7253b570aaaccb1c902a</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>ab67b3e69d8acc26005635f1cdf986c01</Anchor>
    <Abstract>constructor for the Sensor</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readActiveStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac4f137488cec51ae6ebd8b56142def33</Anchor>
    <Abstract>The next functions are used primarily for storing the parameters and control of how the sensor works.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a77e853610d04e46b9c3db7aedeefd583</Anchor>
    <Abstract>All these functions cover the SPI interface and should be implemented into XMC SPI wrapper.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a6e83584c74a72d1243b2325f056716c3</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a74e901656480957edbfdce79d99ab590</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ace80914649733a3045110acaa5b2566e</Anchor>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>end</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac2c7251bb9b2570fd3f065087ad1c9aa</Anchor>
    <Abstract>Switches the sensor off and ends the comunication.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>triggerUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a8b20197095fe51d38749573e930701c0</Anchor>
    <Abstract>Triggers an update in the register buffer.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>enableSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a1b640b2d39e54af974b2699e9cbaf7ab</Anchor>
    <Abstract>Function enables Sensor by switch on EN pin which is only possible on Sensor2go shields,...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>disableSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a36f65d31d68be3190354b6aa32238b8e</Anchor>
    <Abstract>Functions disables Sensor by switch off EN pin (only possible on Sensor2go shield)</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readBlockCRC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a32fa9cede7dabe812630f28fd67f45a9</Anchor>
    <Abstract>Reads the block of _registers from addresses 08 - 0F in order to figure out the CRC.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readFromSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a9140a4c8dcf66a3417edc8a2e0a6520a</Anchor>
    <Abstract>General read function for reading _registers from the Tle5012b.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readMoreRegisters</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af3e2a7844327621adf0759a071eca4b7</Anchor>
    <Abstract>Can be used to read 1 or more consecutive _registers, and the values used to read 1 or more than 1 co...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af3d41ee5db94f9867807e03e11c32add</Anchor>
    <Abstract>This functions reads the main status word for the sensor, mainly for checking with the additional saf...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readActivationStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac6d071f7e86dd97d3f38399084a11b25</Anchor>
    <Abstract>This functions reads activation status word for the sensor, which held on/off information for all opt...</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac4bb2f1dcaf241c31ab7b9ae99428d36</Anchor>
    <Abstract>read register offset 0x06</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a9072a0c9381eecc0b1a125be8e2d38ef</Anchor>
    <Abstract>read register offset 0x07</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a378219cd79b8ad2a7403028ce12ec16d</Anchor>
    <Abstract>read register offset 0x08</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a390dd86d484f4592b1041ce0aac93c60</Anchor>
    <Abstract>read register offset 0x09</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readOffsetX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a1e96e8730f7d991408fff4b04c87d855</Anchor>
    <Abstract>read register offset 0x0A</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readOffsetY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a1a43aac5d2822e07b4c71724374b2eb2</Anchor>
    <Abstract>read register offset 0x0B</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac870f707edce38e0bd1340edc920b3a7</Anchor>
    <Abstract>read register offset 0x0C</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIFAB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a7762e0656aa14a5946ff483da629fb6b</Anchor>
    <Abstract>read register offset 0x0D</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readIntMode4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a574e5494be6d2cc283dfb809dfb46daa</Anchor>
    <Abstract>read register offset 0x0E</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a046788e8d5857a5a8d5753adcd4a3e29</Anchor>
    <Abstract>read register offset 0x0F</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempDMag</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a2ae450ae4fa350c848755cb168434f09</Anchor>
    <Abstract>read register offset 0x14</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempRaw</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>affe9143fe96d1a6f98655076be36b6c2</Anchor>
    <Abstract>read register offset 0x15</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempIIFCnt</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a9a52618065603e37804e1b0de141fdec</Anchor>
    <Abstract>read register offset 0x20</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTempT25</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a04fdd68d0d026e0985e9a80f55aa7d4c</Anchor>
    <Abstract>read register offset 0x30</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRawX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>afa199fd73a1fcd1d521e84dfc76067b2</Anchor>
    <Abstract>The rawX value is signed 16 bit value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readRawY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ad1a15395c2a870a9aed4a15350d00f4d</Anchor>
    <Abstract>The rawY value is signed 16 bit value.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleRange</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af264b8bee7cedf6f8703c6f45bb92e0e</Anchor>
    <Abstract>returns the Angle Range Angle Range is stored in bytes 14 - 4 of MOD_2.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a69b7f1776bb9a5ccdc6e37f36e30070e</Anchor>
    <Abstract>Returns the angleValue calculated on the base of a 15 bit signed integer.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleValue</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a5591ed9a89a69c2ae84e169afd910888</Anchor>
    <Abstract>Same function as before but also returns a pointer to the raw data.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getNumRevolutions</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>aa6c23f2ed450d6bf769fb9f824ca18b8</Anchor>
    <Abstract>Returns the number of revolutions done from the angle value which is a 9 bit signed integer.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTemperature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a8af825f5a06821b5681b1d3decc2dc39</Anchor>
    <Abstract>Return the temperature.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getTemperature</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>af43ead769c892c165c10e999ab4558dc</Anchor>
    <Abstract>Same as above but also returns a pointer to the raw data.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a14f4b39cdb03955a1d7f4b0648232e87</Anchor>
    <Abstract>Returns the calculated angle speed.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getAngleSpeed</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a3fe01489173bad4921165c872b41808d</Anchor>
    <Abstract>Same as above but also returns a pointer to the raw data.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSlaveNumber</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a40e7bbc659f88cd747dcde66ca22e207</Anchor>
    <Abstract>Function sets the SNR register with the correct slave number.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToSensor</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a0601c6d4d0449d1dec934420b74c5a23</Anchor>
    <Abstract>General write function for writing registers to the Tle5012b.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTempCoeffUpdate</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ab2145a6cfee2789b6178a4397e708abf</Anchor>
    <Abstract>This function is used in order to update the CRC in the register 0F(second byte)</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeActivationStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a0bccafbd2b4459d84eda14d9761f0803</Anchor>
    <Abstract>Standard function used for updating the CRC.</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>adae82ceca5bf85722579ed7ba6560b98</Anchor>
    <Abstract>write register offset 0x06</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSIL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a3bd4b8868a04073ad03d3de56616ce08</Anchor>
    <Abstract>write register offset 0x07</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ab80206716ba9efaf55c55bc8ba517087</Anchor>
    <Abstract>write register offset 0x08</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a630f5d767edb27a10c9c253f1ea3c8fc</Anchor>
    <Abstract>write register offset 0x09</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOffsetX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a399b13d2b82e6b169b21cf0b6f76476b</Anchor>
    <Abstract>write register offset 0x0A</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeOffsetY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a604fc1dd18d344cb087510b74aca0bc8</Anchor>
    <Abstract>write register offset 0x0B</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeSynch</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a59095bb94844d7bcd1be84acb77ccfb9</Anchor>
    <Abstract>write register offset 0x0C</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIFAB</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>acb9d82511b602a82bcacf81f0dd098f8</Anchor>
    <Abstract>write register offset 0x0D</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeIntMode4</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a39117f21c22ef1fcb4b4a01f26e4a5a2</Anchor>
    <Abstract>write register offset 0x0E</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeTempCoeff</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a4e6326499c30bf5bfcd6db95ee58bf48</Anchor>
    <Abstract>write register offset 0x0F</Abstract>
    <DeclaredIn>Tle5012b.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sensorRegister</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a88d990ddea407c2ea4636fc36d791579</Anchor>
    <Abstract>sensor register read and separation</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>_spiConnection</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ab99ec26720c5b5865723a14b9c89b422</Anchor>
    <Abstract>SPI library for 3/4wire setup.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>ac6e2445f0598385ab5df8ce55bca5a6f</Anchor>
    <Abstract>Pin to switch on/off the sensor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMOSI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a37936b026924c6b9b972531ea0f76d54</Anchor>
    <Abstract>Pin for SPI MOSI (pin 0.6 on test board);.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMISO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>accf2481ed9b23ac27f5fa1431fc4e681</Anchor>
    <Abstract>Pin for SPI MISO (pin 0.7 on test board)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSCK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a2b856c2b509475fb60fe41e6d8391415</Anchor>
    <Abstract>Pin for CLOCK (pin 0.8 on test board)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a33c580726077dc3cf0d09b678c97f92c</Anchor>
    <Abstract>Pin for chip select (pin 0.9 on test board)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSlave</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a8efc5fae4b72b8f1da30d62933ba54f7</Anchor>
    <Abstract>actual set slave number</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safetyStatus</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a4a630fc4542a94f9a0a6acf2ef04e470</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>safetyWord</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a8623c50134a21355283d68669c6292fa</Anchor>
    <Abstract>the last fetched safety word</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readSensorType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>ae33552eb906f3e6c35ce433beac1409c</Anchor>
    <Abstract>Function reads all readable sensor registers and separates the information fields.</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identifyInterfaceType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>acb55b4581ca31b8e3a561031eda496b4</Anchor>
    <Abstract>Function identifies the current set interface type according some characteristic register settings.</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeInterfaceType</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a392ccc2636a002337cfb9aa5fc75e340</Anchor>
    <Abstract>Functions switches between all possible interface types.</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>resetFirmware</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>af3cecee8759030ddadc8a63f1af2089a</Anchor>
    <Abstract>Function reset the Sensor to fuse defaults.</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCalibration</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a3ccd7a7f89632715ee58c4ca8815c7e1</Anchor>
    <Abstract>Function set the sensors calibration mode.</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>identify</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a5e633e268db91b5f42aa51ee1d460210</Anchor>
    <Abstract>Identify the sensor interface and PCB board.</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>noAutoCal</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>ad95c7ea83257a314413e62709fe4aa57a0a270e90a1da9ba6e769e909ad214811</Anchor>
    <Abstract>noAutoCal = no auto-calibration</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>ad95c7ea83257a314413e62709fe4aa57ad9722608703c018c3d43be8ed1db6518</Anchor>
    <Abstract>mode1 update every angle update cycle (FIR_MD setting)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>ad95c7ea83257a314413e62709fe4aa57afc2572bd02492a4adbc8901af98f48fc</Anchor>
    <Abstract>mode2 update every 1.5 revolutions</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mode3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>ad95c7ea83257a314413e62709fe4aa57a13c79bd85ab985f6c5030785258a1e56</Anchor>
    <Abstract>mode3 update every 11.25°</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IIF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a7c1d59b69007f14ef32e1bd51eb73d97a5bba912ca534e6cc54a7decf7ab91e19</Anchor>
    <Abstract>IIF Incremental Interface (IIF)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PWM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a7c1d59b69007f14ef32e1bd51eb73d97a729b162b7033ffd65a82a8647b08902c</Anchor>
    <Abstract>PWM Pulse-Width-Modulation (PWM)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HSM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a7c1d59b69007f14ef32e1bd51eb73d97a5bd55fb2cc676745e3d0995dc522414a</Anchor>
    <Abstract>HSM Hall Switch Mode (HSM)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a7c1d59b69007f14ef32e1bd51eb73d97abc0b16ea4ef893013b6222fbea5dd7b8</Anchor>
    <Abstract>SPC Short-PWM-Code (SPC)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SSC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a7c1d59b69007f14ef32e1bd51eb73d97a4034ffcf08777c3c6884833f1a953486</Anchor>
    <Abstract>SSC Synchronous Serial Communication (SSC)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_E1000</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a353054fd19cbc94b5061d5f097107ac8acf70bc28332217483a57630be8735d81</Anchor>
    <Abstract>TLE5012B_E1000 Sensor2Go variant.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_E3005</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a353054fd19cbc94b5061d5f097107ac8a6926490fdb58180164f75e1cc420b4c1</Anchor>
    <Abstract>TLE5012B_E3005.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_E5000</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a353054fd19cbc94b5061d5f097107ac8a472904caa4159b72c35bb8ff1770a007</Anchor>
    <Abstract>TLE5012B_E5000 Sensor2Go variant.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_E5020</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a353054fd19cbc94b5061d5f097107ac8a8aceb703957c973f740e6c5ae405aa01</Anchor>
    <Abstract>TLE5012B_E5020.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_E9000</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b_reg</Scope>
    </TokenIdentifier>
    <Path>de/db0/classTle5012b__reg.html</Path>
    <Anchor>a353054fd19cbc94b5061d5f097107ac8ab7b8ae170da77443aace21697d5f40d0</Anchor>
    <Abstract>TLE5012B_E9000 Sensor2Go variant.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_S0</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a15734adf173a0e968109d0fc65ac5164aa6802515e62b549f71d68dcf5a38beae</Anchor>
    <Abstract>TLE5012B_S0 default setting for only one sensor on the SPI.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_S1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a15734adf173a0e968109d0fc65ac5164a49ab2cac701cc2c471c3b774ea702e9e</Anchor>
    <Abstract>TLE5012B_S1 second sensor needs also a second CSQ.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_S2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a15734adf173a0e968109d0fc65ac5164aa149d5d6419fc5242eb318962280b441</Anchor>
    <Abstract>TLE5012B_S2 third sensor and dito.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TLE5012B_S3</Name>
      <APILanguage>cpp</APILanguage>
      <Type>econst</Type>
      <Scope>Tle5012b</Scope>
    </TokenIdentifier>
    <Path>d2/d4e/classTle5012b.html</Path>
    <Anchor>a15734adf173a0e968109d0fc65ac5164a416df351b02b38dc95a840477fe0d409</Anchor>
    <Abstract>TLE5012B_S3 fourth sensor and dito.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::acstat_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Abstract>&lt; Activation Status register offset 0x01</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASRST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a2caa70e41a5aad11f2055ee31526879c</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a173f8c37c97e567c7370e90d45015444</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASVR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a1a589bb27b3a8b3b5c5352867ed2bfde</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASFUSE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a95035d93a54e76fc5cb2545a542a343c</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASDSPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a974f01cabfe5a742c1bd44e6fc1cab8a</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASOV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a9e5fba5ee6399cc08328add60f8120e5</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASVECXY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a02c1d8029dc5710594cdafec7d0ca29e</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASVEGMAG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a54913d1fb822da4df563bb6d70f7e135</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserved2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a63ee83c5a16bf131740e849c44c008cd</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASADCT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>addf6bc239b7d2ca961f5ef348f97099d</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ASFRST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a1d5a637631110d7c7e994ce1568b194b</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserved1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>ae9585eb22d08eea66750b4c95767d771</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserved1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>ade2f2b9c59bd2b06fb550e4f163414a4</Anchor>
    <Abstract>bits 15:11</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASFRST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a349be39c8e0957c2d835706104c0a681</Anchor>
    <Abstract>bits 10:10 Activation of Firmware Reset</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASADCT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a16d66a637e30c53209562a449824930a</Anchor>
    <Abstract>bits 9:9 Enable ADC Test vector Check</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserved2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>ac807bcef5dc77a7155d89cdc03869e31</Anchor>
    <Abstract>bits 8:8</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASVEGMAG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a18a06ecc2c241b9b48d267ea63dafbae</Anchor>
    <Abstract>bits 7:7 Activation of Magnitude Check</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASVECXY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>ad88528f6a612528e5ef7b82ae795fa0e</Anchor>
    <Abstract>bits 6:6 Activation of X,Y Out of Limit-Check</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASOV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>aa53e490d4eee425a93a03edf34579a3d</Anchor>
    <Abstract>bits 5:5 Enable of DSPU Overflow Check</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASDSPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a6d56f6cbe4b2540e61a299396950a7e2</Anchor>
    <Abstract>bits 4:4 Activation DSPU BIST</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASFUSE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>acc2ff3ba19d58b5d760d992cbce6d8ea</Anchor>
    <Abstract>bits 3:3 Activation Fuse CRC</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASVR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>ad845e010298966ecb2844a055c0d42ed</Anchor>
    <Abstract>bits 2:2 Enable Voltage regulator Check</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a1073fd9a37829b7f6a5fa1f014e83b41</Anchor>
    <Abstract>bits 1:1 Enable DSPU Watch dog</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ASRST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a1d89bd4f4d0271955887a4de0ca74f9a</Anchor>
    <Abstract>bits 0:0 Activation of Hardware Reset</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::acstat_t</Scope>
    </TokenIdentifier>
    <Path>dd/d15/structTle5012b__reg_1_1acstat__t.html</Path>
    <Anchor>a1f602bd107146e75a35cc9306b77a4ae</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::arev_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::arev_t</Scope>
    </TokenIdentifier>
    <Path>de/d11/structTle5012b__reg_1_1arev__t.html</Path>
    <Abstract>&lt; Angle Revolution register offset 0x04</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_FCNT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::arev_t</Scope>
    </TokenIdentifier>
    <Path>de/d11/structTle5012b__reg_1_1arev__t.html</Path>
    <Anchor>a0eb90568630c4ef0382b4179ab45b532</Anchor>
    <Abstract>Frame Counter.</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_RDREV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::arev_t</Scope>
    </TokenIdentifier>
    <Path>de/d11/structTle5012b__reg_1_1arev__t.html</Path>
    <Anchor>a7ec30c334170562f940ed7ba0d8f623d</Anchor>
    <Abstract>Read Status, Revolution.</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_REVOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::arev_t</Scope>
    </TokenIdentifier>
    <Path>de/d11/structTle5012b__reg_1_1arev__t.html</Path>
    <Anchor>af4eeeb11b054f1714f3c9454f45cf700</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>REVOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::arev_t</Scope>
    </TokenIdentifier>
    <Path>de/d11/structTle5012b__reg_1_1arev__t.html</Path>
    <Anchor>a21fed86a83c8aa03b2f1208d101266c2</Anchor>
    <Abstract>bits 8:0 Revolution counter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FCNT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::arev_t</Scope>
    </TokenIdentifier>
    <Path>de/d11/structTle5012b__reg_1_1arev__t.html</Path>
    <Anchor>a960f73f4d4d396c843b554ffed75f2f4</Anchor>
    <Abstract>bits 14:9 Internal frame counter.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RDREV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::arev_t</Scope>
    </TokenIdentifier>
    <Path>de/d11/structTle5012b__reg_1_1arev__t.html</Path>
    <Anchor>ad5a7886c225b75bec5268c58d22b7c5c</Anchor>
    <Abstract>bits 15:15 Read Status, Revolution</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::arev_t</Scope>
    </TokenIdentifier>
    <Path>de/d11/structTle5012b__reg_1_1arev__t.html</Path>
    <Anchor>a46105cac9ab52b0e6211bf016852a473</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::aspd_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::aspd_t</Scope>
    </TokenIdentifier>
    <Path>d4/dd7/structTle5012b__reg_1_1aspd__t.html</Path>
    <Abstract>&lt; Angle Speed register offset 0x03</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ANGSPD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::aspd_t</Scope>
    </TokenIdentifier>
    <Path>d4/dd7/structTle5012b__reg_1_1aspd__t.html</Path>
    <Anchor>a3b4d5be0c21c04eac765fc9f3f065e84</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_RDAS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::aspd_t</Scope>
    </TokenIdentifier>
    <Path>d4/dd7/structTle5012b__reg_1_1aspd__t.html</Path>
    <Anchor>aed7a856c994e740bfc756f91ae9a60e7</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANGSPD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::aspd_t</Scope>
    </TokenIdentifier>
    <Path>d4/dd7/structTle5012b__reg_1_1aspd__t.html</Path>
    <Anchor>a3daed43fee0d54c9f97f9b683a863e13</Anchor>
    <Abstract>bits 14:0 Signed value, where the sign bit [14] indicates the direction of the rotation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RDAS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::aspd_t</Scope>
    </TokenIdentifier>
    <Path>d4/dd7/structTle5012b__reg_1_1aspd__t.html</Path>
    <Anchor>a4f60881d35ef40b49677c8a129f72c6d</Anchor>
    <Abstract>bits 15:15 Read Status, Angle Speed</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::aspd_t</Scope>
    </TokenIdentifier>
    <Path>d4/dd7/structTle5012b__reg_1_1aspd__t.html</Path>
    <Anchor>a3e52d22fee71b6028613620bef973ef3</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::aval_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::aval_t</Scope>
    </TokenIdentifier>
    <Path>d5/d7e/structTle5012b__reg_1_1aval__t.html</Path>
    <Abstract>&lt; Angle Value register offset 0x02</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ANGVAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::aval_t</Scope>
    </TokenIdentifier>
    <Path>d5/d7e/structTle5012b__reg_1_1aval__t.html</Path>
    <Anchor>a964927e872af263aa3495249d10b2280</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_RDAV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::aval_t</Scope>
    </TokenIdentifier>
    <Path>d5/d7e/structTle5012b__reg_1_1aval__t.html</Path>
    <Anchor>a1cf9a335e604cc6a68cc1869800036fa</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANGVAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::aval_t</Scope>
    </TokenIdentifier>
    <Path>d5/d7e/structTle5012b__reg_1_1aval__t.html</Path>
    <Anchor>a45d952dbfc5c3d9fd0bbc15271a4ab99</Anchor>
    <Abstract>bits 14:0 Calculated Angle Value (signed 15-bit)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RDAV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::aval_t</Scope>
    </TokenIdentifier>
    <Path>d5/d7e/structTle5012b__reg_1_1aval__t.html</Path>
    <Anchor>a0bb9d7aceae8d2f9dafe68fe64a16ccb</Anchor>
    <Abstract>bits 15:15 Read Status, Angle Value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::aval_t</Scope>
    </TokenIdentifier>
    <Path>d5/d7e/structTle5012b__reg_1_1aval__t.html</Path>
    <Anchor>a29ac8f3d9a1aca61e724b4efb8ad0dc8</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::dmag_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::dmag_t</Scope>
    </TokenIdentifier>
    <Path>dd/d91/structTle5012b__reg_1_1dmag__t.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_MAG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::dmag_t</Scope>
    </TokenIdentifier>
    <Path>dd/d91/structTle5012b__reg_1_1dmag__t.html</Path>
    <Anchor>a321d33bfd053ffc8c41ea0351e9435a8</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::dmag_t</Scope>
    </TokenIdentifier>
    <Path>dd/d91/structTle5012b__reg_1_1dmag__t.html</Path>
    <Anchor>a6195dd24a8a65974cd7e7f0c56444746</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::dmag_t</Scope>
    </TokenIdentifier>
    <Path>dd/d91/structTle5012b__reg_1_1dmag__t.html</Path>
    <Anchor>aa7b1e348b7333b4ee88e76ac1b4387c6</Anchor>
    <Abstract>&lt; D_Mag vector magnitude offset 0x14</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>MAG</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::dmag_t</Scope>
    </TokenIdentifier>
    <Path>dd/d91/structTle5012b__reg_1_1dmag__t.html</Path>
    <Anchor>a7b3580383e0551a6b7efe5edb47fd603</Anchor>
    <Abstract>bits 9:0 Unsigned Angle Vector Magnitude after X, Y error compensation (due to temperature).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::dmag_t</Scope>
    </TokenIdentifier>
    <Path>dd/d91/structTle5012b__reg_1_1dmag__t.html</Path>
    <Anchor>ab4a93096a232e1e152c549a7e4cf32d1</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::fsync_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::fsync_t</Scope>
    </TokenIdentifier>
    <Path>d3/d8c/structTle5012b__reg_1_1fsync__t.html</Path>
    <Abstract>&lt; Frame Synchronization register offset 0x05</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_TEMPR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::fsync_t</Scope>
    </TokenIdentifier>
    <Path>d3/d8c/structTle5012b__reg_1_1fsync__t.html</Path>
    <Anchor>ae13379f4ed65a1cf0934e7b9755aef65</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_FSYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::fsync_t</Scope>
    </TokenIdentifier>
    <Path>d3/d8c/structTle5012b__reg_1_1fsync__t.html</Path>
    <Anchor>a5cfd01b2a45c4f24045e884d94fe01a4</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FSYNC</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::fsync_t</Scope>
    </TokenIdentifier>
    <Path>d3/d8c/structTle5012b__reg_1_1fsync__t.html</Path>
    <Anchor>ae963e128d006b4d17c60c42291419d09</Anchor>
    <Abstract>bits 15:9 Frame Synchronization Counter Value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TEMPR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::fsync_t</Scope>
    </TokenIdentifier>
    <Path>d3/d8c/structTle5012b__reg_1_1fsync__t.html</Path>
    <Anchor>ae8c685eaea30d53faae8ee846d3fb6dd</Anchor>
    <Abstract>bits 8:0 Signed offset compensated temperature value.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::fsync_t</Scope>
    </TokenIdentifier>
    <Path>d3/d8c/structTle5012b__reg_1_1fsync__t.html</Path>
    <Anchor>a7a8f0650b61d8f80f31259ab83a723a7</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::ifab_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_IFADHYST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>aeace3352d8435deb4f8d6788fe1966f4</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_IFABOD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>a9148f56bfe0556fb233885f89fef61d9</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_FIRUDR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>a6806b07872d03428edaed0971f5e7a53</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ORTHO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>a7f8344197b480f3237e94f97e0f02fe7</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ORTHO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>a3b7ac183298b8b069d4b2c8c4752720d</Anchor>
    <Abstract>&lt; IFAB register offset 0x0d</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIRUDR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>a3f8ca91f7c5d669dffb01224d8f1a7a3</Anchor>
    <Abstract>bits 3:3 Initial filter update rate (FIR)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IFABOD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>a1a7cbe4a3e5bfbcd94df6fa4a989324d</Anchor>
    <Abstract>bits 2:2 IFA,IFB,IFC Output Mode</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IFADHYST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>a20527853fb3259451827a14c1f300c06</Anchor>
    <Abstract>bits 1:0 Hysteresis (multi-purpose)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::ifab_t</Scope>
    </TokenIdentifier>
    <Path>df/d7b/structTle5012b__reg_1_1ifab__t.html</Path>
    <Anchor>ae2424c221f5ffd69e6d7487a27ec510b</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::iifcnt_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::iifcnt_t</Scope>
    </TokenIdentifier>
    <Path>d7/dec/structTle5012b__reg_1_1iifcnt__t.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_IIFCNT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::iifcnt_t</Scope>
    </TokenIdentifier>
    <Path>d7/dec/structTle5012b__reg_1_1iifcnt__t.html</Path>
    <Anchor>a0ab6d0079dca414b89666e263d2a9c49</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::iifcnt_t</Scope>
    </TokenIdentifier>
    <Path>d7/dec/structTle5012b__reg_1_1iifcnt__t.html</Path>
    <Anchor>a54d97f278c750619f06f0dc967879f49</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::iifcnt_t</Scope>
    </TokenIdentifier>
    <Path>d7/dec/structTle5012b__reg_1_1iifcnt__t.html</Path>
    <Anchor>a2b951c8ee16632249a196353673e5774</Anchor>
    <Abstract>&lt; IIF counter value offset 0x20</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IIFCNT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::iifcnt_t</Scope>
    </TokenIdentifier>
    <Path>d7/dec/structTle5012b__reg_1_1iifcnt__t.html</Path>
    <Anchor>a4799afadcae00268cf478e8e4c746963</Anchor>
    <Abstract>bits 14:0 14 bit counter value of IIF increments</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::iifcnt_t</Scope>
    </TokenIdentifier>
    <Path>d7/dec/structTle5012b__reg_1_1iifcnt__t.html</Path>
    <Anchor>a65250b06171b44f879d61a641546e062</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::mod1_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Abstract>&lt; MOD_1 Interface Mode1 register offset 0x06</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_IIFMOD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>a424c34bd197fa134dc77ed34f88c8357</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_DSPUHOLD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>aecd1c47babaf84d397f13aecbd60a2db</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>aa7a578e63f69e50c831cd4deb75cb75d</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_CLKSEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>a95ac16758ca83834cd09e9702ecb3612</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>afcb7a107bc784931d0ba800932326dc0</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_FIRMD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>acabd87d061e06c85515a3f7cf4487a68</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FIRMD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>a56657d4fdae6c1663a7113ad40398d4a</Anchor>
    <Abstract>bits 15:14 Update Rate Setting</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>adbab1c29f9c03bea0f57639c3311775a</Anchor>
    <Abstract>bits 13:5</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CLKSEL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>a3bb8f70337f2a92badf0fc3853566c4a</Anchor>
    <Abstract>bits 4:4 Switch to external clock at start-up only.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>ab7586a02e892b18a17686221d94dd502</Anchor>
    <Abstract>bits 3:3</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DSPUHOLD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>aca535cb40f2bb762d5cc70e792d5e0f3</Anchor>
    <Abstract>bits 2:2 If DSPU is on hold, no watch dog reset is performed by DSPU</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IIFMOD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>a49f581af30183aaa9b4394e784068e6a</Anchor>
    <Abstract>bits 1:0 Incremental Interface Mode</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod1_t</Scope>
    </TokenIdentifier>
    <Path>d7/d88/structTle5012b__reg_1_1mod1__t.html</Path>
    <Anchor>a0988a2cee294e5a2c7e298557a91fea7</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::mod2_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Abstract>&lt; MOD_2 Interface Mode2 register offset 0x08</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_AUTOCAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>a641abf11c53ebbf223c3dca182ebb4d2</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_PREDICT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>a461fa00f850a7328264c315ccabd8590</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ANGDIR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>a92ed45ef92b333abee592f9cb18317bd</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ANGRANGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>ae4b988c2b2907802ca9615addf06d924</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>ab5bf7e6037fe0c3a1976aa41e1453213</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>aa9b00ecef4bc9e7b97ceed53a2341c1e</Anchor>
    <Abstract>bits 15:15</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANGRANGE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>a35a1bfd302bb0b082c415c96caf44411</Anchor>
    <Abstract>bits 14:4 Changes the representation of the angle output by multiplying the output with a factor ANG_...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANGDIR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>a2851ff4d37f280d87702946c9ab5e632</Anchor>
    <Abstract>bits 3:3 Inverts angle and angle speed values and revolution counter behavior.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PREDICT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>aaa79c670ce166e9b7281895ec172ebf7</Anchor>
    <Abstract>bits 2:2 Prediction of angle value based on current angle speed</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>AUTOCAL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>aabbbd758a7ef4e3f69160154ea954f3a</Anchor>
    <Abstract>bits 1:0 Automatic calibration of offset and amplitude synchronicity for applications with full-turn.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod2_t</Scope>
    </TokenIdentifier>
    <Path>d8/db2/structTle5012b__reg_1_1mod2__t.html</Path>
    <Anchor>aad08ab9f11784d464810b6c1e4689a18</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::mod3_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Abstract>&lt; MOD_3 Interface Mode3 register offset 0x09</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_PADDRV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>a81232e63014a7abea98ab6fed4d3967c</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SSCOD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>ad03db6f4cffe43c492188a42fbb4271a</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SPIKEF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>a078c5430e8f0c16ef103992798426794</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ANG_BASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>a1e8e59f50416f109a8c38c75226cb87c</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ANG_BASE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>ae7a82c91b5acb558f7da869e3efcdfcd</Anchor>
    <Abstract>bits 15:4 Sets the 0° angle position (12 bit value).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SPIKEF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>ab96c3cb5d8f09ce3283cfc5b2603a938</Anchor>
    <Abstract>bits 3:3 Filters voltage spikes on input pads (IFC, SCK and CSQ).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SSCOD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>a19551b26428bfb4c721aa90d13cfc450</Anchor>
    <Abstract>bits 2:2 SSC-Interface Data Pin Output Mode</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PADDRV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>ae42d0ff106cd97ffe1378ee55ead5b8a</Anchor>
    <Abstract>bits 1;0 Configuration of Pad-Driver</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod3_t</Scope>
    </TokenIdentifier>
    <Path>d7/d46/structTle5012b__reg_1_1mod3__t.html</Path>
    <Anchor>ac6a7f79bb9bbb00709cd5c84ffbfb83a</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::mod4_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_IFMD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>aa94011acc391861e8b1d190eb6587257</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>a956730944676233da5fd4055ae1e5505</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_IFABRES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>a499ddc818efa935b45ee77f7a7d70de7</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_HSMPLP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>ab9f7676d0c75b20baebf0f87e820b574</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_TCOXT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>a892ad9021cbaa520a52255391f5b6384</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCOXT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>a8b6de6cead2a892c09edd05bb23f5407</Anchor>
    <Abstract>&lt; MOD_4 Interface Mode4 register offset 0x0e</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HSMPLP</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>aba926cb00935a3c7232b3794440e9ad4</Anchor>
    <Abstract>bits 8:5 Hall Switch mode (multi-purpose)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IFABRES</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>a11980d5a0391e0f9e79fdbb211963b0a</Anchor>
    <Abstract>bits 4:3 IIF resolution (multi-purpose)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>af8a9503f77fa233fe2f68c32cebbefdc</Anchor>
    <Abstract>bits 2:2</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>IFMD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>a92920a8b628d6de602a25c0b7d216d50</Anchor>
    <Abstract>bits 1:0 Interface Mode on IFA,IFB,IFC</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::mod4_t</Scope>
    </TokenIdentifier>
    <Path>d1/dbc/structTle5012b__reg_1_1mod4__t.html</Path>
    <Anchor>a1189bf96d830d7823034f15271680c6b</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::offx_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::offx_t</Scope>
    </TokenIdentifier>
    <Path>d0/de9/structTle5012b__reg_1_1offx__t.html</Path>
    <Abstract>&lt; Offset X offset 0x0a</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::offx_t</Scope>
    </TokenIdentifier>
    <Path>d0/de9/structTle5012b__reg_1_1offx__t.html</Path>
    <Anchor>ae62f5f1139e2454aa6a803cdee81c391</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_XOFFSET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::offx_t</Scope>
    </TokenIdentifier>
    <Path>d0/de9/structTle5012b__reg_1_1offx__t.html</Path>
    <Anchor>a111e555d871aefac27df0fd2c028d623</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>XOFFSET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::offx_t</Scope>
    </TokenIdentifier>
    <Path>d0/de9/structTle5012b__reg_1_1offx__t.html</Path>
    <Anchor>a57108c4cad94cad715fae5a6eb0caa8b</Anchor>
    <Abstract>bits 15:4 12-bit signed integer value of raw X-signal offset correction at 25°C.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::offx_t</Scope>
    </TokenIdentifier>
    <Path>d0/de9/structTle5012b__reg_1_1offx__t.html</Path>
    <Anchor>a560f983133d323f62f701b9d48769c39</Anchor>
    <Abstract>bits 3:0</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::offx_t</Scope>
    </TokenIdentifier>
    <Path>d0/de9/structTle5012b__reg_1_1offx__t.html</Path>
    <Anchor>a054a03adc66ef5293a89e85d1d5427ed</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::offy_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::offy_t</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/structTle5012b__reg_1_1offy__t.html</Path>
    <Abstract>&lt; Offset Y offset 0x0b</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::offy_t</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/structTle5012b__reg_1_1offy__t.html</Path>
    <Anchor>a9db6c0295e469e4028c8a589798ed318</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_YOFFSET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::offy_t</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/structTle5012b__reg_1_1offy__t.html</Path>
    <Anchor>adb2677491da3ef24609cf7db93d5b469</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>YOFFSET</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::offy_t</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/structTle5012b__reg_1_1offy__t.html</Path>
    <Anchor>a824489582e5443ca41aa0d5818b39aff</Anchor>
    <Abstract>bits 15:4 12-bit signed integer value of raw Y-signal offset correction at 25°C.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::offy_t</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/structTle5012b__reg_1_1offy__t.html</Path>
    <Anchor>adce3bb2c5cadb18fa2e234d4513b53f4</Anchor>
    <Abstract>bits 3:0</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::offy_t</Scope>
    </TokenIdentifier>
    <Path>dc/d2b/structTle5012b__reg_1_1offy__t.html</Path>
    <Anchor>a4ffd0a93394c0bd289e236d4d4850147</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::sil_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Abstract>&lt; SIL register offset 0x07</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ADCTVX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a4f900e6ef29d35ca190104cebe774683</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ADCTVY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a9da59015301dbd185f3a95cb5ab9ac66</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_ADCTVEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a34d1092c32b8ab01ba2277afaa5b0989</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a9da3109d45cdb5c47c607ba5bf85dcf9</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_FUSEREL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a4a51407ab475af38829363c23b7973bc</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a70ce2eb499f0051c1c698f8672909f92</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_FILTINV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>af30cf3b74f62365efd453dca96cc78b2</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_FILTPAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>ac1e40ea1adea07eec921c36c97d47779</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FILTPAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a7bf8134ec98847d7814e386f87f275a1</Anchor>
    <Abstract>bits 15:15</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FILTINV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>aeaba2f6fed14b111b9d43bdb545d8299</Anchor>
    <Abstract>bits 14:14 The raw X-signal is routed also to the raw Y-signal input of the filter so SIN and COS sig...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a7955d360cab0081118e65369a19d3236</Anchor>
    <Abstract>bits 13:11 The X- and Y-signals are inverted.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>FUSEREL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a5b39b7dfbe949308e2a367665e20283f</Anchor>
    <Abstract>bits 10:10 Triggers reload of default values from laser fuses into configuration registers.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd2</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a2255180bc6456f4113617dc4ddaa205d</Anchor>
    <Abstract>bits 9:7</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADCTVEN</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a0660c631df673cff030156ea7ac4eac7</Anchor>
    <Abstract>bits 6:6 Sensor elements are internally disconnected and test voltages are connected to ADCs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADCTVY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a4158421dd0b0aec0afd92dc220e577ab</Anchor>
    <Abstract>bits 5:3 Test vector X</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>ADCTVX</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>afaa668c4923f1d1a84d9eb74fe5a1c6d</Anchor>
    <Abstract>bits 2:0 Test vector Y</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::sil_t</Scope>
    </TokenIdentifier>
    <Path>d0/d65/structTle5012b__reg_1_1sil__t.html</Path>
    <Anchor>a8fb93c39ce9b51210d5efe2e8870d353</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::stat_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Abstract>&lt; Using the inherited constructor</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SRST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a077cc9c9e0e6470d863eef803c55648e</Anchor>
    <Abstract>status reset</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a311057241bb6f230879692f6892ac1e4</Anchor>
    <Abstract>status watch dog</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SVR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a132695b14d4f327b8fd088df45a1f5cd</Anchor>
    <Abstract>status voltage regulator</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SFUSE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a9654725f3d42b617956cc92d1c540e00</Anchor>
    <Abstract>status fuses</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SDSPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>add054373dc2f3f87afe44f08528c3a9f</Anchor>
    <Abstract>status digital signal processing unit</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SXYOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>acc12b19e0708917adbe35a2ba958ab2f</Anchor>
    <Abstract>status overflow</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SOV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a8497facc0341159663aa090bde029d98</Anchor>
    <Abstract>status X/Y data out limit</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SMAGOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>ab33d91c0d100560390a5859d87825d80</Anchor>
    <Abstract>status magnitude out limit</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserved1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a0ac5190e3cf0933167d5ed4cf428fbb6</Anchor>
    <Abstract>reserved</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SADCT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a73bedcfb3be2aaca5072f5b2fbf9b049</Anchor>
    <Abstract>status ADC test</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SROM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>ab8313a22c26d0153846dda2f5e484bb4</Anchor>
    <Abstract>status ROM</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_NOGMRXY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a21c353edb50f62f54068d64582b3cbba</Anchor>
    <Abstract>no valid GMR XY Values</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_NOGMRA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a641c23233c5d6af419c42c9362a6befb</Anchor>
    <Abstract>no valid GMR Angle Value</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SNR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a0adcb3ef9855916d8f6df6589e09cd8f</Anchor>
    <Abstract>slave number</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_RDST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a0ec4432ccb3ee87e49b8d809fbba0ebe</Anchor>
    <Abstract>read status</Abstract>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>RDST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a2136aec929cc051b1aa5f21bbd32fe83</Anchor>
    <Abstract>bits 15:15 Read status</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SNR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a40375d27d051e0629a901b2438e8e862</Anchor>
    <Abstract>bits 14:13 Slave number</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NOGMRA</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a43b03ccc42e57bd0b1019296d2448d81</Anchor>
    <Abstract>bits 12:12 No valid GMR angle value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NOGMRXY</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>ac22a31a4ae560f0af7fbc9495652b52a</Anchor>
    <Abstract>bits 11:11 No valid GMR XY values</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SROM</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>aacb7a059d8fb80d432da3a6f9c79e586</Anchor>
    <Abstract>bits 10:10 Status ROM</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SADCT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>ab30daa9478ca284a3c20d13bc10999ec</Anchor>
    <Abstract>bits 9:9 Status ADC Test</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserved1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a1560bc31c6a03993869eac06cef837f8</Anchor>
    <Abstract>bits 8:8</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SMAGOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a04d2ab74f95aa467f1cdb4ac595c3d66</Anchor>
    <Abstract>bits 7:7 Status magnitude out of Limit</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SXYOL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>ac6111f163d8895b2620ffeeda9366f7c</Anchor>
    <Abstract>bits 6:6 Status X,Y Data out of Limit</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SOV</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>af7cfc00e3a014bd569e028f1871cdd18</Anchor>
    <Abstract>bits 5:5 Status overflow</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SDSPU</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a354887198622b118c048aaf817470958</Anchor>
    <Abstract>bits 4:4 Status digital signal processing unit</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SFUSE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>ae7fe7b669e3c179fc31f8fc36231f281</Anchor>
    <Abstract>bits 3:3 Status fuse CRC</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SVR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>adf5882be97854421e02fb273e9f8de91</Anchor>
    <Abstract>bits 2:2 Status voltage regulator</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SWD</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a491fa89aab70fb45e438b90758f03dda</Anchor>
    <Abstract>bits 1:1 Status Watch dog</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SRST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a2c2c2606dd49e829b5363476c04ed6dc</Anchor>
    <Abstract>bits 0:0 Status Reset</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::stat_t</Scope>
    </TokenIdentifier>
    <Path>df/d23/structTle5012b__reg_1_1stat__t.html</Path>
    <Anchor>a4eb16b9413c678748b0e2d9d9b3d830f</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::synch_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::synch_t</Scope>
    </TokenIdentifier>
    <Path>d6/d37/structTle5012b__reg_1_1synch__t.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::synch_t</Scope>
    </TokenIdentifier>
    <Path>d6/d37/structTle5012b__reg_1_1synch__t.html</Path>
    <Anchor>a14d514b5f7acee1bb01a6b13488e46f1</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SYNCH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::synch_t</Scope>
    </TokenIdentifier>
    <Path>d6/d37/structTle5012b__reg_1_1synch__t.html</Path>
    <Anchor>a7b80ce434bda1f1fbb07dc4cc3815c30</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SYNCH</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::synch_t</Scope>
    </TokenIdentifier>
    <Path>d6/d37/structTle5012b__reg_1_1synch__t.html</Path>
    <Anchor>aded1936a878f56dc22530255137d74fa</Anchor>
    <Abstract>&lt; Synchronicity offset 0x0c</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::synch_t</Scope>
    </TokenIdentifier>
    <Path>d6/d37/structTle5012b__reg_1_1synch__t.html</Path>
    <Anchor>a5ad3974cd6781d3b4070e37feb488922</Anchor>
    <Abstract>bits 3:0</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::synch_t</Scope>
    </TokenIdentifier>
    <Path>d6/d37/structTle5012b__reg_1_1synch__t.html</Path>
    <Anchor>a63431fb3cdb60ef276c7217fa4159b62</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::t250_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::t250_t</Scope>
    </TokenIdentifier>
    <Path>d2/d87/structTle5012b__reg_1_1t250__t.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_T250</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::t250_t</Scope>
    </TokenIdentifier>
    <Path>d2/d87/structTle5012b__reg_1_1t250__t.html</Path>
    <Anchor>a1a17cd423600cee60e6979fde671ff2e</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::t250_t</Scope>
    </TokenIdentifier>
    <Path>d2/d87/structTle5012b__reg_1_1t250__t.html</Path>
    <Anchor>aa9f2ee12e816aaade57ca53eba9db54a</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>T250</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::t250_t</Scope>
    </TokenIdentifier>
    <Path>d2/d87/structTle5012b__reg_1_1t250__t.html</Path>
    <Anchor>a0194bbc3c6d54ff8aefd783aa73de9ee</Anchor>
    <Abstract>&lt; register T250 offset 0x30</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::t250_t</Scope>
    </TokenIdentifier>
    <Path>d2/d87/structTle5012b__reg_1_1t250__t.html</Path>
    <Anchor>a4cd41934be0df60635391f4729a3cf50</Anchor>
    <Abstract>bit 8:0</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::t250_t</Scope>
    </TokenIdentifier>
    <Path>d2/d87/structTle5012b__reg_1_1t250__t.html</Path>
    <Anchor>ad70755a63da88b1d44949977df2e8ee6</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::tcoy_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::tcoy_t</Scope>
    </TokenIdentifier>
    <Path>dd/d98/structTle5012b__reg_1_1tcoy__t.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_CRCPAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::tcoy_t</Scope>
    </TokenIdentifier>
    <Path>dd/d98/structTle5012b__reg_1_1tcoy__t.html</Path>
    <Anchor>a8f2ad60decfc13f6a11baecf45492183</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_SBIST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::tcoy_t</Scope>
    </TokenIdentifier>
    <Path>dd/d98/structTle5012b__reg_1_1tcoy__t.html</Path>
    <Anchor>affed6ed7a36da23a758b7894065cdb97</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_TCOYT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::tcoy_t</Scope>
    </TokenIdentifier>
    <Path>dd/d98/structTle5012b__reg_1_1tcoy__t.html</Path>
    <Anchor>a6e85845a98114fc8109b86c6238c1380</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TCOYT</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::tcoy_t</Scope>
    </TokenIdentifier>
    <Path>dd/d98/structTle5012b__reg_1_1tcoy__t.html</Path>
    <Anchor>a45210fc9178ed94575942040a5ac1de6</Anchor>
    <Abstract>&lt; TCO_Y Temperature Coefficient register offset 0x0f</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SBIST</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::tcoy_t</Scope>
    </TokenIdentifier>
    <Path>dd/d98/structTle5012b__reg_1_1tcoy__t.html</Path>
    <Anchor>ae3ea5407b6d16c0b16cd040eeb0b709f</Anchor>
    <Abstract>bits 8:8 Startup-BIST</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CRCPAR</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::tcoy_t</Scope>
    </TokenIdentifier>
    <Path>dd/d98/structTle5012b__reg_1_1tcoy__t.html</Path>
    <Anchor>a54e9a68e208bba9dfde82210d6326d86</Anchor>
    <Abstract>bits 7:0 CRC of Parameters</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::tcoy_t</Scope>
    </TokenIdentifier>
    <Path>dd/d98/structTle5012b__reg_1_1tcoy__t.html</Path>
    <Anchor>a05cdef00412fdcd0ed0501f11b27188c</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_reg::traw_t</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_reg::traw_t</Scope>
    </TokenIdentifier>
    <Path>df/d4d/structTle5012b__reg_1_1traw__t.html</Path>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_TRAW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::traw_t</Scope>
    </TokenIdentifier>
    <Path>df/d4d/structTle5012b__reg_1_1traw__t.html</Path>
    <Anchor>a62b706ba6e926616ccbb10092828d75e</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::traw_t</Scope>
    </TokenIdentifier>
    <Path>df/d4d/structTle5012b__reg_1_1traw__t.html</Path>
    <Anchor>a69f80e234d256eecfbb27456a4929180</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>fetch_TTGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>Tle5012b_reg::traw_t</Scope>
    </TokenIdentifier>
    <Path>df/d4d/structTle5012b__reg_1_1traw__t.html</Path>
    <Anchor>adb924db6e55d790de8eca2ff15d9f9d8</Anchor>
    <DeclaredIn>Tle5012b_reg.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TTGL</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::traw_t</Scope>
    </TokenIdentifier>
    <Path>df/d4d/structTle5012b__reg_1_1traw__t.html</Path>
    <Anchor>a324349c55c93e820e20276cc1427d4a1</Anchor>
    <Abstract>&lt; T_RAW temperature raw data offset 0x15</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Reserverd1</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::traw_t</Scope>
    </TokenIdentifier>
    <Path>df/d4d/structTle5012b__reg_1_1traw__t.html</Path>
    <Anchor>af5e8aaa19f000946f4530e4d7b18fa46</Anchor>
    <Abstract>bits 14:10</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TRAW</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::traw_t</Scope>
    </TokenIdentifier>
    <Path>df/d4d/structTle5012b__reg_1_1traw__t.html</Path>
    <Anchor>ad1a84d2bdfb6ee166a8635498c59a7a7</Anchor>
    <Abstract>bits 9:0 Temperature Sensor Raw-Value at ADC without offset</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reg</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_reg::traw_t</Scope>
    </TokenIdentifier>
    <Path>df/d4d/structTle5012b__reg_1_1traw__t.html</Path>
    <Anchor>ab1596dfafe9bed9e00bc0a7251a817a0</Anchor>
    <Abstract>the register value</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_SPI</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Tle5012b_SPI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>a16ec57ac7fa220557c03d1775d3f123a</Anchor>
    <Abstract>Consrtuctor with optional SPI channel number which can be used for XMC4700 or any other microcontroll...</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~Tle5012b_SPI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>a5ec6b30da0aa78b6b12c0971542ccff9</Anchor>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>begin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>a57845ecf3e5adb6ad2fb18b612c2b245</Anchor>
    <Abstract>New for fetching SPI parameter.</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setCSPin</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>a85a9fa339f4e00a62341edc09230c159</Anchor>
    <Abstract>Set the chipselect pin.</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendReceiveSpi</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>ac581184b63790ac800a15f6f6fe57e11</Anchor>
    <Abstract>Main SPI three wire communication functions for sending and receiving data.</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sendConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>a94224b445b27314e05693a03221b3fa7</Anchor>
    <Abstract>set SPI to send mode</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>receiveConfig</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>a907f9f0891443630adb29295e61eab7d</Anchor>
    <Abstract>set SPI to receive mode</Abstract>
    <DeclaredIn>Tle5012b_SPI.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mCS</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>ad541807550854c2c74b2a0b893ed2aa3</Anchor>
    <Abstract>Pin for chip select (pin 0.9 on test board)</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSpiNum</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>a0735f8dc07ab11a378551720f0581145</Anchor>
    <Abstract>Number of used SPI channel.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMOSI</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>ace69940a72ad3e72f8c191591f7403ea</Anchor>
    <Abstract>Pin for SPI MOSI (e.g.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mMISO</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>ad7cc32ea74776489eb395b2d98f3db58</Anchor>
    <Abstract>Pin for SPI MISO (e.g.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSCK</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>ad26d273f8ed436d29ce1dadca1125427</Anchor>
    <Abstract>Pin for CLOCK (e.g.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>mSPISetting</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>Tle5012b_SPI</Scope>
    </TokenIdentifier>
    <Path>d6/d6e/classTle5012b__SPI.html</Path>
    <Anchor>a9d9891ccff4b613144d9419948886bae</Anchor>
    <Abstract>We need the original SPI class setting in case none XMC microcontroller.</Abstract>
  </Token>
</Tokens>
